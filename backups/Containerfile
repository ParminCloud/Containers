ARG DEBIAN_VERSION
FROM docker.io/library/debian:${DEBIAN_VERSION}-slim AS awscli-installer

# Based on Official Image

RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
	--mount=type=cache,target=/var/lib/apt,sharing=locked \
	apt-get update && \
	apt-get install -y curl unzip

RUN cd /tmp && \
	curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" \
	-o "awscliv2.zip" && \
	unzip awscliv2.zip && \
	./aws/install --bin-dir /aws-cli-bin/ --update

FROM docker.io/library/debian:${DEBIAN_VERSION}-slim AS base

ENV BACKUP_SCHEDULE ""
ENV BACKUP_RETENTION_DAYS ""
ENV BACKUP_PASSWORD ""
ENV BACKUP_CMD "false"
ENV S3_PREFIX ""
ENV S3_BUCKET ""

RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
	--mount=type=cache,target=/var/lib/apt,sharing=locked \
	apt-get update && \
	apt-get install -y \
	cron \
	curl \
	jq \
	gpupg2 \
	mandoc && \
	rm -rf /etc/cron.*/*

COPY --chmod=0775 \
	--from=awscli-installer \
	/usr/local/aws-cli/ /usr/local/aws-cli/
COPY --chmod=0775 \
	--from=awscli-installer \
	/aws-cli-bin/ /usr/local/bin/

RUN mkdir -p /opt/parmincloud/backups

COPY --chmod=0775 entrypoint.sh /opt/parmincloud/backups/entrypoint
COPY --chmod=0775 start.sh /opt/parmincloud/backups/start-container
COPY --chmod=0775 utils.sh /opt/parmincloud/backups/utils
COPY --chmod=0775 backup.sh /opt/parmincloud/backups/backup

ENTRYPOINT [ "/opt/parmincloud/backups/entrypoint" ]
CMD ["/opt/parmincloud/backups/start-container"]
