ARG DEBIAN_VERSION
ARG PGVERSION
FROM docker.io/library/debian:${DEBIAN_VERSION}-slim AS awscli-installer

# Based on Official Image

RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
	--mount=type=cache,target=/var/lib/apt,sharing=locked \
	apt-get update && \
	apt-get install -y curl unzip

RUN cd /tmp && \
	curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" \
	-o "awscliv2.zip" && \
	unzip awscliv2.zip && \
	./aws/install --bin-dir /aws-cli-bin/ --update

FROM docker.io/library/debian:${DEBIAN_VERSION}-slim AS base

ENV BACKUP_SCHEDULE=""
ENV BACKUP_RETENTION_DAYS=""
ENV BACKUP_PASSWORD=""
ENV BACKUP_CMD="false"
ENV S3_PREFIX=""
ENV S3_BUCKET=""
ENV DEBIAN_FRONTEND=noninteractive
ENV LC_ALL=C.UTF-8
ENV TERM=xterm-color

RUN rm -f /etc/apt/apt.conf.d/docker-clean; echo 'Binary::apt::APT::Keep-Downloaded-Packages "true";' > /etc/apt/apt.conf.d/keep-cache
RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
	--mount=type=cache,target=/var/lib/apt,sharing=locked \
	apt-get update && \
	apt-get install -y \
	cron \
	curl \
	jq \
	gpupg2 \
	mandoc && \
	rm -rf /etc/cron.*/*

COPY --chmod=0775 \
	--from=awscli-installer \
	/usr/local/aws-cli/ /usr/local/aws-cli/
COPY --chmod=0775 \
	--from=awscli-installer \
	/aws-cli-bin/ /usr/local/bin/

RUN mkdir -p /opt/parmincloud/backups

COPY --chmod=0775 entrypoint.sh /opt/parmincloud/backups/entrypoint
COPY --chmod=0775 start.sh /opt/parmincloud/backups/start-container
COPY --chmod=0775 utils.sh /opt/parmincloud/backups/utils
COPY --chmod=0775 backup.sh /opt/parmincloud/backups/backup

ENTRYPOINT [ "/opt/parmincloud/backups/entrypoint" ]
CMD ["/opt/parmincloud/backups/start-container"]

FROM base AS file-backup

ENV BACKUP_CMD "/opt/parmincloud/backups/file-backup"
ENV DATA_DIR "/data"

COPY --chmod=0775 file-backup.sh /opt/parmincloud/backups/file-backup

FROM base AS base-pg

ARG DEBIAN_VERSION
ARG PGVERSION

ENV PGHOST=""
ENV PGPORT=""
ENV PGUSER=""
ENV PGPASSWORD=""

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
	--mount=type=cache,target=/var/lib/apt,sharing=locked \
	install -d /usr/share/postgresql-common/pgdg && \
	curl -o /usr/share/postgresql-common/pgdg/apt.postgresql.org.asc --fail https://www.postgresql.org/media/keys/ACCC4CF8.asc && \
	echo "deb [signed-by=/usr/share/postgresql-common/pgdg/apt.postgresql.org.asc] https://apt.postgresql.org/pub/repos/apt ${DEBIAN_VERSION}-pgdg main" > /etc/apt/sources.list.d/pgdg.list && \
	apt-get update && \
	apt-get install -y postgresql-client-${PGVERSION}

FROM base-pg AS pg-basebackup

ENV BACKUP_CMD "/opt/parmincloud/backups/pg-basebackup"
COPY --chmod=0775 pg-basebackup.sh /opt/parmincloud/backups/pg-basebackup

FROM base-pg AS pg-dump

ENV BACKUP_CMD "/opt/parmincloud/backups/pg-dump"
COPY --chmod=0775 pg-dump.sh /opt/parmincloud/backups/pg-dump

FROM base AS mysql-dump

ENV BACKUP_CMD="/opt/parmincloud/backups/mysql-dump"
ENV DATA_DIR="/data"

ENV MYSQL_HOST=""
ENV MYSQL_PORT=""
ENV MYSQL_USER=""
ENV MYSQL_PASSWORD=""

RUN curl -L --output mysql-apt-confg.deb https://dev.mysql.com/get/mysql-apt-config_0.8.33-1_all.deb && \
	apt-get update && \
	apt-get install -y lsb-release && \
	dpkg -i ./mysql-apt-confg.deb && \
	rm -f mysql-apt-confg.deb

RUN --mount=type=cache,target=/var/cache/apt,sharing=locked \
	--mount=type=cache,target=/var/lib/apt,sharing=locked \
	apt-get update && \
	apt-get install -y mysql-client

COPY --chmod=0775 mysql-dump.sh /opt/parmincloud/backups/mysql-dump
